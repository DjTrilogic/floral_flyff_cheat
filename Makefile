IDIR=include

RCINCLUDE=-I../wine/include
INCLUDE_PATH=-I$(IDIR)
CFLAGS=$(INCLUDE_PATH) $(RCINCLUDE) -mwindows -mno-cygwin -fpermissive -elf_i386

SDIR=src
ODIR=$(SDIR)/o
RDIR=$(SDIR)/res

LIBS=-lm -lpsapi -lcomctl32

### Generated by Winemaker 0.8.4
###
### Invocation command line was
### /usr/bin/winemaker --lower-uppercase -DSTRICT .


SRCDIR                = .
SUBDIRS               =
DLLS                  =
EXES                  = floral_flyff_cheat.exee
DLL_PATH              = -L../wine/dlls -L../wine/libs/wine

### floral_flyff_cheat.exe sources and settings

MODULE= floral_flyff_cheat.exe
C_SRCS=
CXX_SRCS= $(SDIR)/low_functions.cpp \
	$(SDIR)/main.cpp \
	$(SDIR)/search.cpp \
	$(SDIR)/gToolTip.cpp \
	$(SDIR)/flyff.cpp
	
RC_SRCS=$(RDIR)/dlg_main.rc

OBJS= $(C_SRCS:.c=.o) \
	$(CXX_SRCS:.cpp=.o) \
	$(RC_SRCS:.rc=.res)


### Tools

CC=i686-w64-mingw32-gcc
CXX=../wine/tools/winegcc/wineg++
RC=../wine/tools/wrc/wrc
AR = ar



# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCINCLUDE) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<
	
### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBS) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(MODULE): $(OBJS)
	$(CXX) -o $@ $(OBJS) $(LIBRARY_PATH) $(DLL_PATH) $(DEFLIB)


# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

.PHONY: clean

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(EXES) $(EXES:%=%.so)





